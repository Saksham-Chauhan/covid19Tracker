{"version":3,"sources":["App.js","index.js"],"names":["App","useState","num","setnum","data","setdata","show","setshow","Country","CountryCode","date","ID","NewConfirmed","NewDeaths","NewRecovered","Premium","Slug","TotalConfirmed","TotalDeaths","TotalRecovered","obj","setobj","useEffect","fetch","then","dat","json","data2","Countries","map","p","catch","error","console","log","className","select","value","onChange","e","target","val","ind","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LAyFeA,EAxFH,WACV,MAAmBC,qBAAnB,mBAAOC,EAAP,KAAWC,EAAX,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAwBJ,mBAAS,SAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAAqBN,mBAAS,CAC1BO,QAAQ,GACRC,YAAY,GACZC,KAAK,GACLC,GAAG,GACHC,aAAa,GACbC,UAAU,GACVC,aAAa,GACbC,QAAQ,GACRC,KAAK,GACLC,eAAe,GACfC,YAAY,GACZC,eAAe,KAZnB,mBAAOC,EAAP,KAAWC,EAAX,KAcAC,qBAAU,WACRC,MAAM,sCAAsCC,MAAK,SAACC,GAC5C,OAAOA,EAAIC,UACAF,MAAK,SAACG,GACDA,EAAMC,UACVC,KAAI,SAACT,GAIL,OAHAf,GAAQ,SAACyB,GACP,MAAM,GAAN,mBAAWA,GAAX,CAAaV,OAER,WAERW,OAAM,SAACC,GACRC,QAAQC,IAAIF,QAEtB,IAsBF,OACE,qBAAKG,UAAU,OAAf,SACI,sBAAKA,UAAU,MAAf,UACI,oBAAIA,UAAU,UAAd,qCACA,yBAAQC,OAAO,GAAGC,MAAOnC,EAAKoC,SAAU,SAACC,GACvCpC,EAAOoC,EAAEC,OAAOH,QADlB,UAGE,oDAEAjC,EAAKyB,KAAI,SAACY,EAAIC,GACZ,OAAO,wBAAQL,MAAOK,EAAf,SAA+BD,EAAIjC,SAAVkC,SAG3B,uBACT,wBAAQC,QAnCJ,WACb,MAAuIvC,EAAKF,GAArIM,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,YAAaC,EAA7B,EAA6BA,KAAMC,EAAnC,EAAmCA,GAAIC,EAAvC,EAAuCA,aAAcC,EAArD,EAAqDA,UAAWC,EAAhE,EAAgEA,aAAaC,EAA7E,EAA6EA,QAAQC,EAArF,EAAqFA,KAAKC,EAA1F,EAA0FA,eAAeC,EAAzG,EAAyGA,YAAYC,EAArH,EAAqHA,eACrHc,QAAQC,IAAI9B,EAAKF,IACjBmB,GAAO,WACJ,MAAO,CACLb,UACAC,cACAC,OACAC,KACAC,eACAC,YACAC,eACAC,UACAC,OACAC,iBACAC,cACAC,qBAGFZ,GAAQ,IAgBF,oBACI,qBAAK4B,UAAU,MAAf,SAEM7B,EACE,qCACA,qBAAI6B,UAAU,OAAd,oCAA6Cf,EAAIR,gBACjD,qBAAIuB,UAAU,OAAd,yBAAkCf,EAAIP,aACtC,qBAAIsB,UAAU,OAAd,4BAAqCf,EAAIN,gBACzC,qBAAIqB,UAAU,OAAd,sCAA+Cf,EAAIH,kBACnD,qBAAIkB,UAAU,OAAd,2BAAoCf,EAAIF,eACxC,qBAAIiB,UAAU,OAAd,8BAAuCf,EAAID,qBAE3C,aC3E9ByB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.75039e90.chunk.js","sourcesContent":["import React,{useState,useEffect} from \"react\";\nconst App = ()=>{\n  const [num,setnum]=useState();\n  const [data, setdata] = useState([]);\n  const [show, setshow] = useState('false');\n  const [obj,setobj] = useState({\n      Country:'' ,\n      CountryCode:'' ,\n      date:'' ,\n      ID:'' ,\n      NewConfirmed:'' ,\n      NewDeaths:'' ,\n      NewRecovered:'',\n      Premium:'',\n      Slug:'',\n      TotalConfirmed:'',\n      TotalDeaths:'',\n      TotalRecovered:''\n  });\n  useEffect(()=>{\n    fetch('https://api.covid19api.com/summary').then((dat)=>{\n          return dat.json();\n                  }).then((data2)=>{\n                    let a=data2.Countries;\n                    a.map((obj)=>{\n                      setdata((p)=>{\n                        return [...p,obj]\n                      })\n                      return null;\n                    })\n                  }).catch((error)=>{\n                    console.log(error);\n                  })\n        },[]);\n        const Click = () =>{\n         const {Country, CountryCode, date, ID, NewConfirmed, NewDeaths, NewRecovered,Premium,Slug,TotalConfirmed,TotalDeaths,TotalRecovered} = data[num];\n         console.log(data[num]);\n         setobj(()=>{\n            return {\n              Country ,\n              CountryCode ,\n              date ,\n              ID ,\n              NewConfirmed ,\n              NewDeaths ,\n              NewRecovered ,\n              Premium,\n              Slug,\n              TotalConfirmed,\n              TotalDeaths,\n              TotalRecovered\n            }\n         })\n            setshow(true);\n        }\n        return(\n          <div className='main'>\n              <div className='sub'>\n                  <h1 className='heading' >Get Covid19 update Live</h1>\n                  <select select='' value={num} onChange={(e)=>{\n                    setnum(e.target.value);\n                    }}>\n                    <option>Select Country</option>\n                    {\n                    data.map((val,ind)=>{\n                      return <option value={ind} key={ind}>{val.Country}</option>\n                    })   \n                  }\n                  </select><br />\n                  <button onClick={Click}>Search</button>\n                      <div className=\"sec\">\n                          {\n                            show?(\n                              <>\n                              <h3 className=\"data\">New confirmed case is: {obj.NewConfirmed}</h3>\n                              <h3 className=\"data\">New Deaths: {obj.NewDeaths}</h3>\n                              <h3 className=\"data\">New Recovered: {obj.NewRecovered}</h3>\n                              <h3 className=\"data\">Total confirmed: case is {obj.TotalConfirmed}</h3>\n                              <h3 className=\"data\">Total Deaths: {obj.TotalDeaths}</h3>\n                              <h3 className=\"data\">Total Recovered: {obj.TotalRecovered}</h3>\n                              </>\n                            ):null\n                          }\n                      </div>   \n                </div>    \n          </div>\n        );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}